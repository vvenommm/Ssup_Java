package d_array;

import java.util.Arrays;

public class Sort {

	public static void main(String[] args) {
  /*
	 * 석차구하기 : 점수를 비교해 작은 점수의 등수를 증가시키는 방식
	 * 선택정렬 : 가장 작은 숫자를 찾아서 앞으로 보내는 방식
	 * 버블정렬 : 바로 뒤의 숫자와 비교해서 큰 수를 뒤로 보내는 방식
	 * 삽입정렬 : 두 번째 숫자부터 앞의 숫자들과 비교해 큰 수는 뒤로 밀고 중간에 삽입하는 방식
	 */
  
	/*
	 * 선택정렬 : 가장 작은 숫자를 찾아서 앞으로 보내는 방식
	 */
	 //최소값이 아니라 최소값이 들어있는 인덱스를 찾는게 포인트
		for(int i = 0; i < arr.length-1; i++) {
			int min = i; //값이 아니라 인덱스를 넣고 시작
			for(int j = i+1; j < arr.length; j++) {
				if(arr[j] < arr[min]) {
					min = j; //인덱스를 저장. 몇 번 인덱스가 가장 작은지 알 수 있음
				}
			}
			 int temp = arr[i];
			 arr[i] = arr[min];
			 arr[min] = temp;
				System.out.println( Arrays.toString(arr));
		}
		System.out.println( Arrays.toString(arr));
		System.out.println( "------------------------------------------");
    
// ----------------------------------------------------------------------

	/*
	 * 버블정렬 : 바로 뒤의 숫자와 비교해서 큰 수를 뒤로 보내는 방식
	 * 1,2 2,3 ,3,4 등 비교해서 가장 큰 숫자를 뒤로 보냄
	 * 다시 처음으로 가서 쭉 반복
	 */

		for(int i = 0; i < arr.length - 1; i++) {
			boolean flag = true;
			for (int j = 0; j < arr.length-1-i; j++) {//증가하는 i를 빼면 점점 max가 줄어듦
				if(arr[j] > arr[j+1]) {
					int temp = arr[j];
					arr[j] = arr[j+1];
					arr[j+1] = temp;
					flag = false;
				}
			}
			if(flag) {
				break;
			}
		System.out.println( Arrays.toString(arr));
		System.out.println( "------------------------------------------");
  
  }
}
