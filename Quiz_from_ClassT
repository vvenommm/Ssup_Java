package z_codingTest.level01_question;

public class Q01 {
	/*
	0부터 9까지의 숫자 중 일부가 들어있는 정수 배열 numbers가 매개변수로 주어집니다.
	numbers에서 찾을 수 없는 0부터 9까지의 숫자를 모두 찾아 더한 수를 return 하도록 solution 함수를 완성해주세요.
	
	1) 1 ≤ numbers의 길이 ≤ 9
	2) 0 ≤ numbers의 모든 원소 ≤ 9
	3) numbers의 모든 원소는 서로 다릅니다.
	
	<< 입출력 예 >>
	1) numbers = [1,2,3,4,6,7,8,0] ==> result = 14
		: 5,9가 numbers에 없으므로 5 + 9 = 14를 return 해야 함
	2) numbers = [5,8,4,0,6,7,9] ==> result = 6
		: 1,2,3이 numbers에 없으므로 1 + 2 + 3 = 6을 return 해야 함
	*/

	public static void main(String[] args) {
		int[] numbers1 = new int[] {1,2,3,4,6,7,8,0};
		int[] numbers2 = new int[] {5,8,4,0,6,7,9};
		System.out.println(solution(numbers1));
		System.out.println(solution(numbers2));
	}
	
	public static int solution(int[] numbers) {
		int answer = 0;
		int sum = 0;
		
		for(int i = 0; i < numbers.length; i++) {
			 sum += numbers[i];
		}
		answer = 45 - sum;
		return answer;
    }

}


----------------------------------------------------------------------------


package z_codingTest.level01_question;

import java.util.Arrays;

public class Q02 {
	
	/*
	함수 solution은 정수 n을 매개변수로 입력받습니다.
	n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요.
	예를들어 n이 118372면 873211을 리턴하면 됩니다.
	
	1) n은 1이상 8000000000 이하인 자연수입니다.
	
	<< 입출력 예 >>
	1) n = 118372 ==> return = 873211
	 */

	public static void main(String[] args) {
		long n = 118372;
		System.out.println(solution(n));
	}
	
	public static long solution(long n) {
		long answer = 0;
		long[] num = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1};
		
		//몇 자리인지 구해서 쪼개기
		if (n/1000000000 > 0) {
			for(int i = 0; i < num.length; i++) {
				num[i] = n%10;
				n /= 10;
			}
		}else if(n/100000000 > 0) {
			for(int i = 0; i < num.length-1; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}else if(n/10000000 > 0) {
			for(int i = 0; i < num.length-2; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}else if(n/1000000 > 0) {
			for(int i = 0; i < num.length-3; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}else if(n/100000 > 0) {
			for(int i = 0; i < num.length-4; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}else if(n/1000 > 0) {
			for(int i = 0; i < num.length-5; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}else if(n/100 > 0) {
			for(int i = 0; i < num.length-6; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}else if(n/10 > 0) {
			for(int i = 0; i < num.length-7; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}else if(n/1 > 0) {
			for(int i = 0; i < num.length-8; i++) {
			num[i] = n%10;
			n /= 10;
			}
		}
		
		//선택정렬
		for(int i = 0; i < num.length-1; i++) {
			int min = i;
			for(int j = i+1; j < num.length; j++) {
				if(num[j] < num[min]) {
					min = j;
				}
			}
			 long temp = num[i];
			 num[i] = num[min];
			 num[min] = temp;
		}
		
		
		//다시 숫자 이어붙이기 (여기 작업 중)
		long ten = 1;
		for(int i = 0; i < num.length; i++) {
			if(num[i] > 0) {
				answer += num[i]*ten;
				ten *= 10;
			}else if(num[i]<0) {
				answer += 0;
			}
		}
		
		return answer;

	}
}


--------------------------------------------------------------------------






