객체 : 사람
DNA : 정보
클래스 : 설계도

new
* 객체지향언어(3요소 5원칙) 1. 데이터(필드) & 2. 동작(메소드)
<3요소>
1. 상속 : 클래스 간에 부모/자식 클래스가 있다. 자식 클래스는 부모 클래스의 속성(변수) 및 기능(메소드, 함수)을 물려받음
2. 캡슐화(은닉화) : 같은 기능을 목적으로 작성된 코드를 모아놓되 다른 곳에서 안 보이게 함. 속성은 숨기고 기능은 공개
3. 다형성
 - overriding : 부모클래스에서 정의되어 있는 내용을 자식 클래스에서 재정의
 - overloading : 같은 이름을 가진 메소드를 인자값의 종류에 따라 여러개 만들 수 있다. 원하는 기능에 따라 동명, 다른 기능으로 여러개

<5원칙(solid)>
1.S : SRP(단일 책임의 원칙 Single Responsibility Principle)
 - 하나의 클래스는 하나의 목적을 위해 생성, 클래스가 제공하는 것은 하나의 책임을 수행하는 데에 집중되어야 함
2. O : OCP(개방 폐쇄의 원칙 Open Close Principle)
 - 소프트웨어 구성요소인 컴포넌트, 클래스, 모듈, 함수는 확장에는 열려있고 변경에는 닫혀있어야 함
3. L : LSP(리스코브 치환의 원칙 : The Liskov Substitution)
 - 자식 클래스는 언제나 부모 클래스를 대체할 수 있다. 부모 자리에 자식이 들어가도 잘 작동해야 함
4. I : ISP (인터페이스 분리의 원칙 Interface Segregation Principle)
 - 자신이 사용하지 않는 인터페이스는 구현하지 말아야 함
5. D : DIP(의존성역전의 원칙 Dependency Inversion Principle)
 - 구조적 디자인에서 발생하던 하위 레벨 모듈의 변경이 상위 레벨 모듈의 변경을 요구하는 위계관계를 끊는 의미의 역전
